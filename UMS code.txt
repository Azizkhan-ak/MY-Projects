/////////////////////MAIN CLASS/////////////////////////////////////////

package university.management.system;
import java.awt.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.awt.event.*;


public class UniversityManagementSystem extends Thread{
// public static String Day,Month,Year; 
public  static JFrame homepage;
public static Connection con;
public static Statement st;
public static boolean bool=false;
    public static void main(String[] args) throws InterruptedException, ClassNotFoundException, SQLException {
        
        
        
        
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/UMS","root","123456789");
            st=con.createStatement();
        
        
        
        
        Container c;
        homepage=new JFrame("University Management System");
       ImageIcon i=new ImageIcon("â€ªE:/eidulfitr/d3.jpg");
       
        c=homepage.getContentPane();
      
        c.setBackground(Color.black);
        int h,w=350;
        
        int x=350,y=200;
        JLabel dawood=new JLabel("Dawood University Management System");
        dawood.setBounds(170,250,1200,100);
        dawood.setForeground(Color.red);
        dawood.setFont(new Font("aa",Font.BOLD,50));
        c.add(dawood);
        
        for(h=250;h<=740;h=h+54)
        {
        
        
        w=w+120;
        homepage.setBounds(x,y, w, h);
        
        homepage.setLayout(null);
        homepage.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         ImageIcon ii=new ImageIcon("E:\\eidulfitr\\d1.png");
    homepage.setIconImage(ii.getImage());
        homepage.setVisible(true);
        x=x-40;
        y=y-22;
        Thread.sleep(100);
        }
        
    Login lo=new Login(); 
    if(bool)
    {
        
    
    JMenuBar homemenubar=new JMenuBar();
    
    
    JMenu Student =new JMenu("Student");
    JMenuItem Admission=new JMenuItem("Admission");
    JMenuItem Exclusion=new JMenuItem("Exclusion");
    JMenuItem Dataofstudent=new JMenuItem("Data Of Student");
    JMenuItem Listofstudent=new JMenuItem("List Of Students");
    Student.add(Admission);
    Student.add(Exclusion);
    Student.add(Dataofstudent);
    Student.add(Listofstudent);
    homemenubar.add(Student);
    Admission.addActionListener(new ActionListener()
    {
        public void actionPerformed(ActionEvent ae)
        {
            new Admission();
        }
    });
    Exclusion.addActionListener(new ActionListener()
    {
        public void actionPerformed(ActionEvent ae)
        {
            //new Exclusion(Day,Month,Year);this is not used
            new Exclusion();
        }
    });
    Dataofstudent.addActionListener(new ActionListener()
    {
        public void actionPerformed(ActionEvent ae)
        {
            new DataOfStudent();
        }
    });
    Listofstudent.addActionListener(new ActionListener()
    {
        public void actionPerformed(ActionEvent ae)
        {
            try {
                new ListOfStudents();
            } catch (SQLException ex) {
                Logger.getLogger(UniversityManagementSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        /* NewJFrame()
         {
             
         }*/
        
        }
    });
    JMenu Teacher=new JMenu("Teacher");
    JMenuItem AddTeacher=new JMenuItem("Add Teacher");
    JMenuItem RemoveTeacher=new JMenuItem("Remove Teacher");
    JMenuItem TeacherData=new JMenuItem("Teacher's Information");
    JMenuItem Listofteacher=new JMenuItem("List of Teachers");
    Teacher.add(AddTeacher);
    Teacher.add(RemoveTeacher);
    Teacher.add(TeacherData);
    Teacher.add(Listofteacher);
    homemenubar.add(Teacher);
    AddTeacher.addActionListener(new ActionListener()
    {
        public void actionPerformed(ActionEvent ae)
        {
            new AddTeacher();
        }
    });
    RemoveTeacher.addActionListener(new ActionListener()
    {
        public void actionPerformed(ActionEvent ae)
        {
            new RemoveTeacher();
        }
    });
    TeacherData.addActionListener(new ActionListener()
    {
        public void actionPerformed(ActionEvent ae)
        {
            new TeacherInformation();
        }
    });
    Listofteacher.addActionListener(new ActionListener()
    {
        public void actionPerformed(ActionEvent ae)
        {
            try {
                new TeachersList();
            } catch (SQLException ex) {
                Logger.getLogger(UniversityManagementSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    });
    homepage.setJMenuBar(homemenubar);
    homepage.setVisible(true);
  }
    
 else
    {
        homepage.dispose();
    }
}

}


///////////////////////////////////////////////////////////////LOGIN CLASS/////////////////////////////

package university.management.system;
import java.sql.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
public class Login extends UniversityManagementSystem{
  
    String name="",passw="",dbname="",dbpass="";
    JFrame warning;
    JButton ok;
    Login()
    {
        Dialog login=new Dialog(homepage,"Admin Login",true);
        login.setLayout(null);
        login.setBounds(450,200,450,300);
        login.setBackground(Color.lightGray);
        ImageIcon icon=new ImageIcon("E:\\eidulfitr\\login4.jpg");
        JLabel loginimage=new JLabel(icon,JLabel.LEFT);
        loginimage.setBounds(20,100,100,100);
        login.add(loginimage);
        JLabel un=new JLabel("User Name");
        un.setBounds(150,90,80,50);
        un.setFont(new Font("aa",Font.BOLD,15));
        login.add(un);
        JTextField user=new JTextField(15);
        user.setBounds(250,97,150,30);
        
        login.add(user);
        
        JLabel pa=new JLabel("Password");
        pa.setBounds(150,140,80,50);
        pa.setFont(new Font("aa",Font.BOLD,15));
        login.add(pa);
        JPasswordField password=new JPasswordField(15);
        password.setBounds(250,147,150,30);
        password.setEchoChar('*');
        login.add(password);
        
        JButton submit=new JButton("Login");
        submit.setBounds(250,197,150,30);
        submit.setBackground(Color.black);
        submit.setForeground(Color.white);
        login.add(submit);
        submit.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent ae)
            {
                name=user.getText();
                passw=password.getText();
                try {
                    
                    ResultSet rs=st.executeQuery("select * from Login;");
                    rs.next();
                    dbname=rs.getString(1);
                    dbpass=rs.getString(2);
                   if(dbname.equals(name) && dbpass.equals(passw))
                   {
                       bool=true;
                       login.dispose();
                   }
                   else
                   {
                       homepage.dispose();
                       homepage.setVisible(false);
                      
                       warning=new JFrame("Warning");
                       warning.setLayout(null);
                       warning.setBounds(600,300,320,150);
                       warning.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                       JLabel warn=new JLabel("your password or username was incorrect.");
                       warn.setBounds(30,10,250,40);
                       warning.add(warn);
                       ok=new JButton("Ok");
                       ok.setBounds(110,60,90,30);
                       warning.add(ok);
                       ok.addActionListener(new ActionListener()
                       {
                           public void actionPerformed(ActionEvent ae)
                           {
                               warning.dispose();
                               homepage.dispose();
                           }
                       });
                       warning.setVisible(true);
                   }
                    
                } catch (SQLException ex) {
                    System.out.println("Something went wrong.........");
                }
                    
            }

        });
     
        login.addWindowListener(new WindowAdapter()
        {
            public void windowClosing(WindowEvent we)
            {
                
                
                homepage.dispose();
            }
        });
        login.setVisible(true);
        
    }
    
}
/////////////////////////////////////STUDENT ADDMISSION////////////////////////////////////

package university.management.system;
import java.awt.*;

import java.awt.event.*;
import javax.swing.*;
import java.sql.*;

import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
public class Admission extends UniversityManagementSystem {
public String Afname,Alname,Adob,Agender,Amail,Aaddress,
        Adepartment;
public int Ainter,Ametric,Arollno;
public long Aphone,Acnic;
JDialog checkboxerror,rollnull,successdialog;
JLabel checkboxerrormsg,rollnullerror,successmsg;
JButton checkboxerrorbut,rollnullerrorbut,successbut;
    
    public Admission()
    {
        JFrame admissionframe=new JFrame("Admission");
        admissionframe.setBounds(45,65,1200,600);
        admissionframe.setLayout(null);
        Container c=admissionframe.getContentPane();
        c.setBackground(Color.green);
       admissionframe.addWindowListener(new WindowAdapter()
       {
           public void windowClosing(WindowEvent we)
           {
               admissionframe.dispose();
           }
       });
     
      
       JLabel lsfname=new JLabel("Student First Name");
       lsfname.setBounds(55,75,200,40);
       lsfname.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(lsfname);
       JLabel lslname=new JLabel("Student Last Name");
       lslname.setBounds(55,120,200,40);
       lslname.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(lslname);
       JLabel lsDob=new JLabel("Student DateOfBirth");
       lsDob.setBounds(55,165,200,40);
       lsDob.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(lsDob);
       JLabel lsGender=new JLabel("Student Gender");
       lsGender.setBounds(55,210,200,40);
       lsGender.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(lsGender);
       JLabel lsmail=new JLabel("Student Mail");
       lsmail.setBounds(55,255,200,40);
       lsmail.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(lsmail);
       JLabel lsPhone=new JLabel("Student Phone");
       lsPhone.setBounds(55,300,200,40);
       lsPhone.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(lsPhone);
       JLabel lsaddress=new JLabel("Student Address");
       lsaddress.setBounds(55,345,200,40);
       lsaddress.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(lsaddress);
       JTextField fname=new JTextField(30);
       fname.setBounds(260,80,250,30);
       fname.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent ke)
            {
                
                char c=ke.getKeyChar();
                if((c>'z')||(c<'A'))
                {
                    
                    ke.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
                
            }
        });
       admissionframe.add(fname);
       JTextField lname=new JTextField(30);
       lname.setBounds(260,120,250,30);
       lname.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent ke)
            {
                char c=ke.getKeyChar();
                if((c>'z')||(c<'A'))
                {
                    ke.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
                
            }
        });
       admissionframe.add(lname);
       
       JComboBox day=new JComboBox();   
       day.setBounds(260,160,80,30);
       admissionframe.add(day);
       String[] dayarr=new String[31];
       int num=1;
       for(int i=0;i<31;i++)
       {
           dayarr[i]=String.valueOf(num);
           day.addItem(dayarr[i]);
           num++;
       }
       JComboBox month=new JComboBox();   
       month.setBounds(340,160,80,30);
       admissionframe.add(month);
       String montharr[]={"Jan","Feb","March","April","May","June","July","Aug","Sep","Oct","Nov","Dec"};
       for(int i=0;i<12;i++)
       {
           month.addItem(montharr[i]);
       }
       Date d= new Date();
       JComboBox year=new JComboBox();   
       year.setBounds(420,160,80,30);
       admissionframe.add(year);
       for(int i=1900;i<=d.getYear()+1900;i++)
       {
           String str=String.valueOf(i);
       year.addItem(str);
       }
       
       ButtonGroup gender=new ButtonGroup();
       JLabel Male=new JLabel("Male");
       Male.setBounds(260,210,40,30);
       Male.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(Male);
       JRadioButton male=new JRadioButton();
       male.setBounds(300,210,20,30);
       admissionframe.add(male);
       JLabel Female=new JLabel("Female");
       Female.setBounds(330,210,60,30);
       Female.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(Female);
       JRadioButton female=new JRadioButton();
       female.setBounds(391,210,20,30);
       admissionframe.add(female);
       JLabel Other=new JLabel("Other");
       Other.setBounds(420,210,60,30);
       Other.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(Other);
       JRadioButton other=new JRadioButton();
       other.setBounds(470,210,20,30);
       admissionframe.add(other);
       gender.add(male);
       gender.add(female);
       gender.add(other);
       
       
       JTextField tsmail=new JTextField(30);
       tsmail.setBounds(260,260,250,30);
       admissionframe.add(tsmail);
       
       JTextField tsphone=new JTextField();
       tsphone.setColumns(11);
       tsphone.setBounds(260,300,250,30);
       admissionframe.add(tsphone);
       tsphone.addKeyListener(new KeyAdapter()
       {
           public void keyTyped(KeyEvent ke)
           {
               char c=ke.getKeyChar();
               if(c<'0'||c>'9')
               {
                   ke.consume();
                   Toolkit.getDefaultToolkit().beep();
               }
           }
       });
       
       JTextArea tsaddress=new JTextArea();
       tsaddress.setBounds(260,340,250,100);
       admissionframe.add(tsaddress);
       
       JLabel lsroll=new JLabel("Student Roll No.");
       lsroll.setBounds(580,75,200,40);
       lsroll.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(lsroll);
       JTextField tsroll=new JTextField();
       tsroll.setBounds(755,75,250,30);
       admissionframe.add(tsroll);
       JLabel lscnic=new JLabel("Student CNIC");
       lscnic.setBounds(580,120,200,40);
       lscnic.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(lscnic);
       JTextField tscnic=new JTextField();
       tscnic.setBounds(755,120,250,30);
       admissionframe.add(tscnic);
       JLabel lsinter=new JLabel("Intermediate %");
       lsinter.setBounds(580,165,200,40);
       lsinter.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(lsinter);
       JTextField tsinter=new JTextField();
       tsinter.setBounds(755,165,250,30);
       admissionframe.add(tsinter);
       JLabel lsMetric=new JLabel("Metric %");
       lsMetric.setBounds(580,210,200,40);
       lsMetric.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(lsMetric);
       JTextField tsmetric=new JTextField();
       tsmetric.setBounds(755,210,250,30);
       admissionframe.add(tsmetric);
       JLabel lsdepartment=new JLabel("Department");
       lsdepartment.setBounds(580,255,200,40);
       lsdepartment.setFont(new Font("aa",Font.BOLD,15));
       admissionframe.add(lsdepartment);
       JComboBox csdepartment=new JComboBox();
       csdepartment.addItem("Computer System Engineering");
       csdepartment.addItem("Electronics Engineering");
       csdepartment.addItem("Chemical Engineering");
       csdepartment.addItem("Architecture and Planning");
       csdepartment.addItem("Metallurgy and Material Engineering");
       csdepartment.addItem("Energy and Environment Engineering");
       csdepartment.addItem("Industrial Engineering");
       csdepartment.addItem("Petroleum and Gas Engineering");
       csdepartment.addItem("Telecommunication Engineering");
       csdepartment.setBounds(755,255,250,30);
       admissionframe.add(csdepartment);
      
       JCheckBox check=new JCheckBox();
       check.setBounds(55,470,30,20);
       admissionframe.add(check);
       JLabel lcheck=new JLabel("Confirm submitting details of new student.");
       lcheck.setBounds(90,470,250,20);
       admissionframe.add(lcheck);
       
       
        JButton submit=new JButton("Submit");
       submit.setBounds(755, 350,150,30);
       submit.setBackground(Color.black);
       submit.setForeground(Color.white);
       admissionframe.add(submit);
       submit.addActionListener(new ActionListener()
       {
           public void actionPerformed(ActionEvent ae)
           {
               if(check.isSelected())
               {
                   if((tsroll.getText()).isEmpty())
                   {
                       
                       rollnull=new JDialog(admissionframe,"warning",true);
                       rollnull.setLayout(null);
                       rollnull.setBounds(400,250,340,150);
                       Container c=rollnull.getContentPane();
                       c.setBackground(Color.lightGray);
                       rollnullerror=new JLabel("Roll No. cannot be empty.please fill roll no.");
                       rollnullerror.setBounds(40,10,300,40);
                       rollnull.add(rollnullerror);
                       rollnullerrorbut =new JButton("Go back");
                       rollnullerrorbut.setBounds(110,60,100,30);
                       rollnullerrorbut.setBackground(Color.black);
                       rollnullerrorbut.setForeground(Color.white);
                       rollnullerrorbut.addActionListener(new ActionListener()
                       {
                           public void actionPerformed(ActionEvent ae)
                           {
                               rollnull.dispose();
                           }
                       });
                       rollnull.add(rollnullerrorbut);
                       rollnull.setVisible(true);
                       
                   }
                   else
                   {
                       try {
                           Afname=fname.getText();
                           Alname=lname.getText();
                          String Day=day.getSelectedItem().toString();
                           String Month=month.getSelectedItem().toString();
                           String Year=year.getSelectedItem().toString();
                           Adob=Day+"-"+Month+"-"+Year;
                           if(male.isSelected())
                           {
                               Agender="Male";
                           }
                           else if(female.isSelected())
                           {
                               Agender="Female";
                           }
                           else
                           {
                               Agender="Other";
                           }
                           Amail=tsmail.getText();
                           Aphone=Long.parseLong(tsphone.getText());
                           Aaddress=tsaddress.getText();
                           Arollno=Integer.parseInt(tsroll.getText());
                           Acnic=Long.parseLong(tscnic.getText());
                           Ainter=Integer.parseInt(tsinter.getText());
                           Ametric=Integer.parseInt(tsmetric.getText());
                           Adepartment=csdepartment.getSelectedItem().toString();
                          // st.executeUpdate("insert into Admission (Sfname,Sroll)values('Aziz',1);");
                           PreparedStatement pst=con.prepareStatement("insert into Admission (Sfname,Slname,Sdob,Sgender,Smail,Sphone,Saddress,Sroll,Scnic,Sinter,Smetric,Sdepartment)values(?,?,?,?,?,?,?,?,?,?,?,?);");
                           pst.setString(1,Afname);
                           pst.setString(2,Alname);
                           pst.setString(3,Adob);
                           pst.setString(4,Agender);
                           pst.setString(5,Amail);
                           pst.setLong(6,Aphone);
                           pst.setString(7,Aaddress);
                           pst.setInt(8,Arollno);
                           pst.setLong(9, Acnic);
                           pst.setInt(10, Ainter);
                           pst.setInt(11, Ametric);
                           pst.setString(12,Adepartment);
                           pst.executeUpdate();
                           
                           
                           successdialog=new JDialog(admissionframe,"Succeeded",true);
                           successdialog.setLayout(null);
                           successdialog.setBounds(400,250,455,150);
                           Container c=successdialog.getContentPane();
                           c.setBackground(Color.lightGray);
                           successmsg=new JLabel("Student added successfully.");
                           successmsg.setBounds(30,20,400,20);
                           successdialog.add(successmsg);
                           successbut=new JButton("Ok");
                           successbut.setBounds(175,60,100,30);
                           successbut.setBackground(Color.black);
                           successbut.setForeground(Color.white);
                           successbut.addActionListener(new ActionListener()
                           {
                               public void actionPerformed(ActionEvent ae)
                               {
                                   successdialog.dispose();
                               }
                           });
                           
                           successdialog.add(successbut);
                           successdialog.setVisible(true);
                       } catch (SQLException ex) {
                           Logger.getLogger(Admission.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
               }
               else
               {
                   checkboxerror=new JDialog(admissionframe,"Warning",true);
                   checkboxerror.setLayout(null);
                   checkboxerror.setBounds(400,250,455,150);
                   Container c=checkboxerror.getContentPane();
                   c.setBackground(Color.lightGray);
                   checkboxerrormsg=new JLabel("You have not confirmed submission.please check the checkBox.");  
                   checkboxerrormsg.setBounds(30,20,400,20);
                   checkboxerror.add(checkboxerrormsg);
                   checkboxerrorbut=new JButton("Go Back");
                   checkboxerrorbut.setBounds(175,60,100,30);
                   checkboxerrorbut.setBackground(Color.black);
                   checkboxerrorbut.setForeground(Color.white);
                   checkboxerrorbut.addActionListener(new ActionListener()
                   {
                       public void actionPerformed(ActionEvent ae)
                       {
                           checkboxerror.dispose();
                       }
                   });
                   checkboxerror.add(checkboxerrorbut);
                   
                   checkboxerror.setVisible(true);
               }
           }
       });
            ImageIcon ii=new ImageIcon("E:\\eidulfitr\\d1.png");
            admissionframe.setIconImage(ii.getImage());
            admissionframe.setVisible(true);
    }

}

////////////////////////////////////////////////EXCLUSION OF STUDENT///////////////////////////////////
package university.management.system;

import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import static university.management.system.UniversityManagementSystem.homepage;


public class Exclusion extends UniversityManagementSystem{
   public String rn,temp="null";   //temp variable for checking if desired roll num is found or not.
   ResultSet rs2;
   PreparedStatement pst;
   public JDialog valuenotfounddialog,rollnonotspecifieddialog,checkboxerror,successdialog;
   public JLabel valuenotfoundmsg,rollnonotspecifiedmsg,checkboxerrormsg,successmsg;
   public JButton valuenotfoundbut,rollnonotspecifiedbut,checkboxerrorbut,successbut;
   
   // public Exclusion(String Day,String Month,String Year) This is not Used.
   public Exclusion() 
   {
         JFrame exclusionframe=new JFrame("Exclusion");
        exclusionframe.setBounds(45,65,1200,600);
        exclusionframe.setLayout(null);
        Container c=exclusionframe.getContentPane();
        c.setBackground(Color.green);
      
        
         exclusionframe.addWindowListener(new WindowAdapter()
       {
           public void windowClosing(WindowEvent we)
           {
               exclusionframe.dispose();
           }
       });
     


       
       JLabel lsfname=new JLabel("Student First Name");
       lsfname.setBounds(55,75,200,40);
       lsfname.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(lsfname);
       JLabel lslname=new JLabel("Student Last Name");
       lslname.setBounds(55,120,200,40);
       lslname.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(lslname);
     //  JLabel lsDob=new JLabel("Student DateOfBirth");
       //lsDob.setBounds(55,165,200,40);
       //lsDob.setFont(new Font("aa",Font.BOLD,15));
       //exclusionframe.add(lsDob);
       JLabel lsGender=new JLabel("Student Gender");
       lsGender.setBounds(55,170,200,40);
       lsGender.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(lsGender);
       JLabel lsmail=new JLabel("Student Mail");
       lsmail.setBounds(55,220,200,40);
       lsmail.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(lsmail);
       JLabel lsPhone=new JLabel("Student Phone");
       lsPhone.setBounds(55,275,200,40);
       lsPhone.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(lsPhone);
       JLabel lsaddress=new JLabel("Student Address");
       lsaddress.setBounds(55,325,200,40);
       lsaddress.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(lsaddress);
       JTextField fname=new JTextField(30);
       fname.setBounds(260,80,250,30);
       fname.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent ke)
            {
                
                char c=ke.getKeyChar();
                if((c>'z')||(c<'A'))
                {
                    
                    ke.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
                
            }
        });
       exclusionframe.add(fname);
       JTextField lname=new JTextField(30);
       lname.setBounds(260,120,250,30);
       lname.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent ke)
            {
                char c=ke.getKeyChar();
                if((c>'z')||(c<'A'))
                {
                    ke.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
                
            }
        });
       exclusionframe.add(lname);
     
       ButtonGroup gender=new ButtonGroup();
       JLabel Male=new JLabel("Male");
       Male.setBounds(260,175,40,30);
       Male.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(Male);
       JRadioButton male=new JRadioButton();
       male.setBounds(300,175,20,30);
       exclusionframe.add(male);
       JLabel Female=new JLabel("Female");
       Female.setBounds(330,175,60,30);
       Female.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(Female);
       JRadioButton female=new JRadioButton();
       female.setBounds(391,175,20,30);
       exclusionframe.add(female);
       JLabel Other=new JLabel("Other");
       Other.setBounds(420,175,60,30);
       Other.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(Other);
       JRadioButton other=new JRadioButton();
       other.setBounds(470,175,20,30);
       exclusionframe.add(other);
       gender.add(male);
       gender.add(female);
       gender.add(other);
       
       
       JTextField tsmail=new JTextField(30);
       tsmail.setBounds(260,225,250,30);
       exclusionframe.add(tsmail);
       
       JTextField tsphone=new JTextField();
       tsphone.setColumns(11);
       tsphone.setBounds(260,275,250,30);
       exclusionframe.add(tsphone);
       tsphone.addKeyListener(new KeyAdapter()
       {
           public void keyTyped(KeyEvent ke)
           {
               char c=ke.getKeyChar();
               if(c<'0'||c>'9')
               {
                   ke.consume();
                   Toolkit.getDefaultToolkit().beep();
               }
           }
       });
       
       JTextArea tsaddress=new JTextArea();
       tsaddress.setBounds(260,340,250,100);
       exclusionframe.add(tsaddress);
       
      
       JLabel lscnic=new JLabel("Student CNIC");
       lscnic.setBounds(580,120,200,40);
       lscnic.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(lscnic);
       JTextField tscnic=new JTextField();
       tscnic.setBounds(755,120,250,30);
       exclusionframe.add(tscnic);
       JLabel lsinter=new JLabel("Intermediate %");
       lsinter.setBounds(580,165,200,40);
       lsinter.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(lsinter);
       JTextField tsinter=new JTextField();
       tsinter.setBounds(755,165,250,30);
       exclusionframe.add(tsinter);
       JLabel lsMetric=new JLabel("Metric %");
       lsMetric.setBounds(580,210,200,40);
       lsMetric.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(lsMetric);
       JTextField tsmetric=new JTextField();
       tsmetric.setBounds(755,210,250,30);
       exclusionframe.add(tsmetric);
       JLabel lsdepartment=new JLabel("Department");
       lsdepartment.setBounds(580,255,200,40);
       lsdepartment.setFont(new Font("aa",Font.BOLD,15));
       exclusionframe.add(lsdepartment);
       JComboBox csdepartment=new JComboBox();
       csdepartment.addItem("Computer System Engineering");
       csdepartment.addItem("Electronics Engineering");
       csdepartment.addItem("Chemical Engineering");
       csdepartment.addItem("Architecture and Planning");
       csdepartment.addItem("Metallurgy and Material Engineering");
       csdepartment.addItem("Energy and Environment Engineering");
       csdepartment.addItem("Industrial Engineering");
       csdepartment.addItem("Petroleum and Gas Engineering");
       csdepartment.addItem("Telecommunication Engineering");
       csdepartment.setBounds(755,255,250,30);
       exclusionframe.add(csdepartment);
      
       JCheckBox check=new JCheckBox();
       check.setBounds(55,470,30,20);
       exclusionframe.add(check);
       JLabel lcheck=new JLabel("Confirm Exclusion of student from University.");
       lcheck.setBounds(90,470,340,20);
       exclusionframe.add(lcheck);
       
       //search button settings..................  
         
     
       JLabel lsroll=new JLabel(" Search Student's Roll No.");
       lsroll.setBounds(55,10,500,40);
       lsroll.setFont(new Font("aa",Font.BOLD,30));
       exclusionframe.add(lsroll);
       JTextField tsroll=new JTextField();
       tsroll.setBounds(470,15,250,40);
       exclusionframe.add(tsroll);
       JButton search=new JButton("Search");
       search.setBounds(750,15,100,40);
       search.setBackground(Color.black);
       search.setForeground(Color.white);
       exclusionframe.add(search);
       search.addActionListener(new ActionListener()
       {
           public void actionPerformed(ActionEvent ae)
           {
               try {
                   rn=tsroll.getText();
                   ResultSet rs=st.executeQuery("SELECT Sroll FROM Admission;");
                   while(rs.next())
                   {
                       
                       if(rn.equals(rs.getString("Sroll")))
                       {
                          temp=rs.getString("Sroll");
                          pst= con.prepareStatement("Select * from Admission Where Sroll=?");
                          pst.setString(1, rn);
                          rs2 =pst.executeQuery();
                          rs2.next();
                          fname.setText(rs2.getString("Sfname"));
                          lname.setText(rs2.getString("Slname"));
                          tsmail.setText(rs2.getString("Smail"));
                          tsphone.setText(rs2.getString("Sphone"));
                          tsaddress.setText(rs2.getString("Saddress"));
                          tscnic.setText(rs2.getString("Scnic"));
                          tsinter.setText(rs2.getString("Sinter"));
                          tsmetric.setText(rs2.getString("Smetric"));
                          csdepartment.setSelectedItem(rs2.getString("Sdepartment"));
                         /* day.setSelectedItem(Day);
                          month.setSelectedItem(Month);these are not used
                          year.setSelectedItem(Year);*/
                         if(rs2.getString("Sgender").equals("Male"))
                                 {
                                     male.setSelected(true);
                                 }
                         else if(rs2.getString("Sgender").equals("Female"))
                                 {
                                     female.setSelected(true);
                                 }
                         else
                         {
                             other.setSelected(true);
                         }
                          
                       }
                      
                    }
                    if(temp.equals("null"))
                       {
                           valuenotfounddialog=new JDialog(exclusionframe,"Warning",true);
                           valuenotfounddialog.setBounds(400,250,350,150);
                           valuenotfounddialog.setLayout(null);
                           Container c=valuenotfounddialog.getContentPane();
                           c.setBackground(Color.lightGray);
                           valuenotfoundmsg=new JLabel("Entered roll no. does not exist.");
                           valuenotfoundmsg.setBounds(100,20,400,20);
                           valuenotfounddialog.add(valuenotfoundmsg);
                           valuenotfoundbut=new JButton("Ok");
                           valuenotfoundbut.setBounds(125,60,100,30);
                           valuenotfoundbut.setBackground(Color.black);
                           valuenotfoundbut.setForeground(Color.white);
                           valuenotfounddialog.add(valuenotfoundbut);
                           
                           
                           valuenotfoundbut.addActionListener(new ActionListener()
                           {
                               public void actionPerformed(ActionEvent ae)
                               {
                                   valuenotfounddialog.dispose();
                               }
                           });
                           valuenotfounddialog.setVisible(true);
                       }
                 
                   
                   
               } catch (SQLException ex) {
                   Logger.getLogger(Exclusion.class.getName()).log(Level.SEVERE, null, ex);
               }
                  
                   
                   
              
           }
       });
       
       JButton Delete=new JButton("Exclude");
       Delete.setBounds(755, 350,150,30);
       Delete.setBackground(Color.black);
       Delete.setForeground(Color.lightGray);
       exclusionframe.add(Delete);
       Delete.addActionListener(new ActionListener()
       {
           public void actionPerformed(ActionEvent ae)
           {
               if(tsroll.getText().isEmpty())
               {
                   rollnonotspecifieddialog=new JDialog(exclusionframe,"Warning",true);
                   rollnonotspecifieddialog.setLayout(null);
                   rollnonotspecifieddialog.setBounds(400,250,350,150);
                   Container c=rollnonotspecifieddialog.getContentPane();
                   c.setBackground(Color.lightGray);
                   rollnonotspecifiedmsg=new JLabel("Roll no. not specified.");
                   rollnonotspecifiedmsg.setBounds(120,20,400,20);
                   rollnonotspecifieddialog.add(rollnonotspecifiedmsg);
                   rollnonotspecifiedbut=new JButton("Go back");
                   rollnonotspecifiedbut.setBounds(125,60,100,30);
                   rollnonotspecifiedbut.setBackground(Color.black);
                   rollnonotspecifiedbut.setForeground(Color.white);
                   rollnonotspecifieddialog.add(rollnonotspecifiedbut);
                   rollnonotspecifiedbut.addActionListener(new ActionListener()
                   {
                       public void actionPerformed(ActionEvent ae)
                       {
                           rollnonotspecifieddialog.dispose();
                       }
                   });
                   rollnonotspecifieddialog.setVisible(true);
               }
               else
               {
                   if(check.isSelected())
                   {
                   try {
                       pst=con.prepareStatement("Delete from Admission where Sroll=?");
                       pst.setString(1,rn);
                       pst.executeUpdate();
                       
                           successdialog=new JDialog(exclusionframe,"Warning",true);
                           successdialog.setBounds(400,250,350,150);
                           successdialog.setLayout(null);
                           Container c=successdialog.getContentPane();
                           c.setBackground(Color.lightGray);
                           successmsg=new JLabel("Student Excluded successfully.");
                           successmsg.setBounds(100,20,400,20);
                           successdialog.add(successmsg);
                           successbut=new JButton("Ok");
                           successbut.setBounds(125,60,100,30);
                           successbut.setBackground(Color.black);
                           successbut.setForeground(Color.white);
                           successdialog.add(successbut);
                           
                           
                           successbut.addActionListener(new ActionListener()
                           {
                               public void actionPerformed(ActionEvent ae)
                               {
                                   successdialog.dispose();
                               }
                           });
                           successdialog.setVisible(true);
                       
                       
                   } catch (SQLException ex) {
                       Logger.getLogger(Exclusion.class.getName()).log(Level.SEVERE, null, ex);
                   }
                   }
                   else
                   {
                   checkboxerror=new JDialog(exclusionframe,"Warning",true);
                   checkboxerror.setLayout(null);
                   checkboxerror.setBounds(400,250,455,150);
                   Container c=checkboxerror.getContentPane();
                   c.setBackground(Color.lightGray);
                   checkboxerrormsg=new JLabel("your have not confirmed Exclusion.please check box to confirm.");  
                   checkboxerrormsg.setBounds(30,20,400,20);
                   checkboxerror.add(checkboxerrormsg);
                   checkboxerrorbut=new JButton("Go Back");
                   checkboxerrorbut.setBounds(175,60,100,30);
                   checkboxerrorbut.setBackground(Color.black);
                   checkboxerrorbut.setForeground(Color.white);
                   checkboxerrorbut.addActionListener(new ActionListener()
                   {
                       public void actionPerformed(ActionEvent ae)
                       {
                           checkboxerror.dispose();
                       }
                   });
                   checkboxerror.add(checkboxerrorbut);
                   
                   checkboxerror.setVisible(true);
                   }
               }
           }
       });
            ImageIcon ii=new ImageIcon("E:\\eidulfitr\\d1.png");
            exclusionframe.setIconImage(ii.getImage());
            exclusionframe.setVisible(true);
    }
}

/////////////////////////////////////////DATA OF STUDENT///////////////////

package university.management.system;

import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import static university.management.system.UniversityManagementSystem.con;
import static university.management.system.UniversityManagementSystem.homepage;

public class DataOfStudent extends UniversityManagementSystem {
PreparedStatement pst;
int a=0;
String rn="";
JDialog valuenotfounddialog;
JLabel valuenotfoundmsg;
JButton valuenotfoundbut;
ResultSet rs1,rs2;
    public DataOfStudent()
    {
         JFrame dataofstudentframe=new JFrame("Admission");
         dataofstudentframe.setBounds(45,65,1200,600);
         ImageIcon ii=new ImageIcon("E:\\eidulfitr\\d1.png");
         dataofstudentframe.setIconImage(ii.getImage());
         dataofstudentframe.setVisible(true);
        
        //creating panel and its componen
        JPanel panel=new JPanel();
        panel.setBounds(50,60,1080,370);
        panel.setBackground(Color.blue);
        panel.setLayout(null);
        panel.setVisible(false);
       JLabel lsfname=new JLabel("Student First Name");
       lsfname.setBounds(55,65,200,40);
       lsfname.setFont(new Font("aa",Font.BOLD,15));
       panel.add(lsfname);
       JLabel lslname=new JLabel("Student Last Name");
       lslname.setBounds(55,120,200,40);
       lslname.setFont(new Font("aa",Font.BOLD,15));
       panel.add(lslname);
      /* JLabel lsDob=new JLabel("Student DateOfBirth");
       lsDob.setBounds(55,165,200,40);
       lsDob.setFont(new Font("aa",Font.BOLD,15));
       dataofstudentframe.add(lsDob);*/
      
       JLabel lsGender=new JLabel("Student Gender");
       lsGender.setBounds(55,170,200,40);
       lsGender.setFont(new Font("aa",Font.BOLD,15));
       panel.add(lsGender);
       JLabel lsmail=new JLabel("Student Mail");
       lsmail.setBounds(55,225,200,40);
       lsmail.setFont(new Font("aa",Font.BOLD,15));
       panel.add(lsmail);
       JLabel lsPhone=new JLabel("Student Phone");
       lsPhone.setBounds(55,275,200,40);
       lsPhone.setFont(new Font("aa",Font.BOLD,15));
       panel.add(lsPhone);
       JLabel lsaddress=new JLabel("Student Address");
       lsaddress.setBounds(55,320,200,40);
       lsaddress.setFont(new Font("aa",Font.BOLD,15));
       panel.add(lsaddress);
       JTextField fname=new JTextField(30);
       fname.setBounds(260,65,250,30);
       fname.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent ke)
            {
                
                char c=ke.getKeyChar();
                if((c>'z')||(c<'A'))
                {
                    
                    ke.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
                
            }
        });
        panel.add(fname);
       JTextField lname=new JTextField(30);
       lname.setBounds(260,120,250,30);
       lname.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent ke)
            {
                char c=ke.getKeyChar();
                if((c>'z')||(c<'A'))
                {
                    ke.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
                
            }
        });
       panel.add(lname);
     
       
       ButtonGroup gender=new ButtonGroup();
       JLabel Male=new JLabel("Male");
       Male.setBounds(260,170,40,30);
       Male.setFont(new Font("aa",Font.BOLD,15));
       panel.add(Male);
       JRadioButton male=new JRadioButton();
       male.setBounds(300,170,20,30);
       panel.add(male);
       JLabel Female=new JLabel("Female");
       Female.setBounds(330,170,60,30);
       Female.setFont(new Font("aa",Font.BOLD,15));
       panel.add(Female);
       JRadioButton female=new JRadioButton();
       female.setBounds(391,170,20,30);
       panel.add(female);
       JLabel Other=new JLabel("Other");
       Other.setBounds(420,170,60,30);
       Other.setFont(new Font("aa",Font.BOLD,15));
       panel.add(Other);
       JRadioButton other=new JRadioButton();
       other.setBounds(470,170,20,30);
       panel.add(other);
       gender.add(male);
       gender.add(female);
       gender.add(other);
       
       
       JTextField tsmail=new JTextField(30);
       tsmail.setBounds(260,225,250,30);
       panel.add(tsmail);
       
       JTextField tsphone=new JTextField();
       tsphone.setColumns(11);
       tsphone.setBounds(260,275,250,30);
       panel.add(tsphone);
       tsphone.addKeyListener(new KeyAdapter()
       {
           public void keyTyped(KeyEvent ke)
           {
               char c=ke.getKeyChar();
               if(c<'0'||c>'9')
               {
                   ke.consume();
                   Toolkit.getDefaultToolkit().beep();
               }
           }
       });
       
       
       
       JTextArea tsaddress=new JTextArea();
       tsaddress.setBounds(260,320,250,100);
       panel.add(tsaddress);
       
      
       
       JLabel lscnic=new JLabel("Student CNIC");
       lscnic.setBounds(580,120,200,40);
       lscnic.setFont(new Font("aa",Font.BOLD,15));
       panel.add(lscnic);
       JTextField tscnic=new JTextField();
       tscnic.setBounds(755,120,250,30);
       panel.add(tscnic);
       JLabel lsinter=new JLabel("Intermediate %");
       lsinter.setBounds(580,165,200,40);
       lsinter.setFont(new Font("aa",Font.BOLD,15));
       panel.add(lsinter);
       JTextField tsinter=new JTextField();
       tsinter.setBounds(755,165,250,30);
       panel.add(tsinter);
       JLabel lsMetric=new JLabel("Metric %");
       lsMetric.setBounds(580,210,200,40);
       lsMetric.setFont(new Font("aa",Font.BOLD,15));
       panel.add(lsMetric);
       JTextField tsmetric=new JTextField();
       tsmetric.setBounds(755,210,250,30);
       panel.add(tsmetric);
       JLabel lsdepartment=new JLabel("Department");
       lsdepartment.setBounds(580,255,200,40);
       lsdepartment.setFont(new Font("aa",Font.BOLD,15));
       panel.add(lsdepartment);
       JComboBox csdepartment=new JComboBox();
       csdepartment.addItem("Computer System Engineering");
       csdepartment.addItem("Electronics Engineering");
       csdepartment.addItem("Chemical Engineering");
       csdepartment.addItem("Architecture and Planning");
       csdepartment.addItem("Metallurgy and Material Engineering");
       csdepartment.addItem("Energy and Environment Engineering");
       csdepartment.addItem("Industrial Engineering");
       csdepartment.addItem("Petroleum and Gas Engineering");
       csdepartment.addItem("Telecommunication Engineering");
       csdepartment.setBounds(755,255,250,30);
       panel.add(csdepartment);
       JTextField panelroll=new JTextField();
       panelroll.setBounds(755,300,250,30);
       JLabel panelrolllabel=new JLabel("Roll NO.");
      panelrolllabel.setBounds(580,300,200,40);
       panelrolllabel.setFont(new Font("aa",Font.BOLD,15));
       
      
        
        
        dataofstudentframe.setLayout(null);
        Container c=dataofstudentframe.getContentPane();
        c.setBackground(Color.green);
        dataofstudentframe.add(panel);
        dataofstudentframe.addWindowListener(new WindowAdapter()
       {
           public void windowClosing(WindowEvent we)
           {
               dataofstudentframe.dispose();
           }
       });
     
       //search button coding..............................
       ////////////////////////////||||||||||||||||?/////////////////
       
       
       JLabel lsroll=new JLabel("Search Student's Roll No.");
       lsroll.setBounds(55,450,450,40);
       lsroll.setFont(new Font("aa",Font.BOLD,30));
       
       dataofstudentframe.add(lsroll);
       JTextField tsroll=new JTextField();
       tsroll.setBounds(470,452,300,40);
       dataofstudentframe.add(tsroll);
       JButton search =new JButton("Search");
       search.setBounds(780,452,100,40);
       search.setBackground(Color.black);
       search.setForeground(Color.white);
       dataofstudentframe.add(search);
       
       search.addActionListener(new ActionListener()
       {
           public void actionPerformed(ActionEvent ae)
           {
               
               
               try {
                   rn=tsroll.getText();
                   panelroll.setText(rn);
                   
                   st=con.createStatement();
                   rs1=st.executeQuery("SELECT Sroll FROM Admission;");
                   while(rs1.next())
                   {
                       if(rn.equals(rs1.getString("Sroll")))
                           a=1;
                         //  break;
                       
                   }
                   if(a==1)
                   {
                   System.out.println("1");
                   panel.setVisible(true);
                   rn=tsroll.getText();
                   
                   pst=con.prepareStatement("select * from Admission where Sroll=?");
                   pst.setString(1,rn);
                   ResultSet rs2=pst.executeQuery();
                   rs2.next();
                   
                   
                   
                   fname.setText(rs2.getString("Sfname"));
                   lname.setText(rs2.getString("Slname"));
                   if(rs2.getString("Sgender").equals("Male"))
                   {
                   male.setSelected(true);
                   }
                   else if(rs2.getString("Sgender").equals("Female"))
                   {
                   female.setSelected(true);
                   }
                   else
                   {
                   other.setSelected(true);
                   }
                   tsmail.setText(rs2.getString("Smail"));
                   tsphone.setText(rs2.getString("Sphone"));
                   tscnic.setText(rs2.getString("Scnic"));
                   tsaddress.setText(rs2.getString("Saddress"));
                   tsinter.setText(rs2.getString("Sinter"));
                   tsmetric.setText(rs2.getString("Smetric"));
                   csdepartment.setSelectedItem(rs2.getString("Sdepartment"));
                   panel.add(panelroll);
                   panel.add(panelrolllabel);
                   panel.setVisible(true);
                   tsroll.setVisible(false);
                   search.setVisible(false);
                   lsroll.setVisible(false);
                   dataofstudentframe.add(panel);
                   dataofstudentframe.setVisible(true);
                   }
                   else
                   {
                       System.out.println("0");
                       
                       panel.setVisible(false);
                   valuenotfounddialog=new JDialog(dataofstudentframe,"Warning",true);
                   valuenotfounddialog.setBounds(400,250,350,150);
                   valuenotfounddialog.setLayout(null);
                   Container c=valuenotfounddialog.getContentPane();
                   c.setBackground(Color.lightGray);
                   valuenotfoundmsg=new JLabel("Entered roll no. does not exist.");
                   valuenotfoundmsg.setBounds(100,20,400,20);
                   valuenotfounddialog.add(valuenotfoundmsg);
                   valuenotfoundbut=new JButton("Ok");
                   valuenotfoundbut.setBounds(125,60,100,30);
                   valuenotfoundbut.setBackground(Color.black);
                   valuenotfoundbut.setForeground(Color.white);
                   valuenotfounddialog.add(valuenotfoundbut);
                   
                   
                   valuenotfoundbut.addActionListener(new ActionListener()
                   {
                   public void actionPerformed(ActionEvent ae)
                   {
                   valuenotfounddialog.dispose();
                   }
                   });
                   valuenotfounddialog.setVisible(true);
                   }
                   
                   
                   
                   /*
                   
                   
                   try {
                   st=con.createStatement();
                   ResultSet rs=st.executeQuery("select Sroll from Admission;");
                   rs.next();
                   while(rs.next())
                   {
                   if(tsroll.getText().equals(rs.getString("Sroll")))
                   {
                   a=1;
                   
                   }
                   
                   }
                   
                   
                   //AFter while LOOP.......................
                   //////////////////////////////////////
                   /////////////////////////////////////////////////////////////
                   if(a==1)
                   {
                   
                   System.out.println(1);
                   /*
                   panel.setVisible(true);
                   rn=tsroll.getText();
                   
                   pst=con.prepareStatement("select * from Admission where Sroll=?");
                   pst.setString(1,rn);
                   ResultSet rs2=pst.executeQuery();
                   rs2.next();
                   
                   
                   
                   fname.setText(rs2.getString("Sfname"));
                   lname.setText(rs2.getString("Slname"));
                   if(rs2.getString("Sgender").equals("Male"))
                   {
                   male.setSelected(true);
                   }
                   else if(rs2.getString("Sgender").equals("Female"))
                   {
                   female.setSelected(true);
                   }
                   else
                   {
                   other.setSelected(true);
                   }
                   tsmail.setText(rs2.getString("Smail"));
                   tsphone.setText(rs2.getString("Sphone"));
                   tscnic.setText(rs2.getString("Scnic"));
                   tsaddress.setText(rs2.getString("Saddress"));
                   tsinter.setText(rs2.getString("Sinter"));
                   tsmetric.setText(rs2.getString("Smetric"));
                   csdepartment.setSelectedItem(rs2.getString("Sdepartment"));
                   panel.setVisible(true);
                   dataofstudentframe.add(panel);
                   dataofstudentframe.setVisible(true);
                   }
                   else
                   {
                   
                   System.out.println(0);
                   
                   
                   panel.setVisible(false);
                   valuenotfounddialog=new JDialog(dataofstudentframe,"Warning",true);
                   valuenotfounddialog.setBounds(400,250,350,150);
                   valuenotfounddialog.setLayout(null);
                   Container c=valuenotfounddialog.getContentPane();
                   c.setBackground(Color.lightGray);
                   valuenotfoundmsg=new JLabel("Entered roll no. does not exist.");
                   valuenotfoundmsg.setBounds(100,20,400,20);
                   valuenotfounddialog.add(valuenotfoundmsg);
                   valuenotfoundbut=new JButton("Ok");
                   valuenotfoundbut.setBounds(125,60,100,30);
                   valuenotfoundbut.setBackground(Color.black);
                   valuenotfoundbut.setForeground(Color.white);
                   valuenotfounddialog.add(valuenotfoundbut);
                   
                   
                   valuenotfoundbut.addActionListener(new ActionListener()
                   {
                   public void actionPerformed(ActionEvent ae)
                   {
                   valuenotfounddialog.dispose();
                   }
                   });
                   valuenotfounddialog.setVisible(true);
                   
                   
                   }
                   
                   
                   }       catch (SQLException ex) {
                   Logger.getLogger(DataOfStudent.class.getName()).log(Level.SEVERE, null, ex);
                   }
                   
                   
                   panel.setVisible(false);
                   dataofstudentframe.setVisible(true);
                   
                   
               */  } catch (SQLException ex) {
                   Logger.getLogger(DataOfStudent.class.getName()).log(Level.SEVERE, null, ex);
               }
}});
    }}
       


//////////////////////////////////////////LIST OF STUDENTS/////////////////////////////////////

package university.management.system;
import java.sql.SQLException;
import javax.swing.*;
import java.awt.event.*;
import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
//import javax.swing.table.JTableHeader;
//import net.proteanit.sql.DbUtils;

public class ListOfStudents extends UniversityManagementSystem{
//Object fname,lname,gender,mail,phone,address,rollno,cnic,inter,metric,department; 

    ListOfStudents() throws SQLException
    {
        JTable aTable=new JTable();
    // TableModel definition
String[] tableColumnsName = {"fame","lname","gender","Mail","Phone","Address","Roll No.","Cnic","Inter","Metric","Department"}; 
DefaultTableModel aModel = (DefaultTableModel) aTable.getModel();
aModel.setColumnIdentifiers(tableColumnsName);

// the query
ResultSet rs = 
   st.executeQuery("select Sfname,Slname,Sgender,Smail,Sphone,Saddress,Sroll,Scnic,Sinter,Smetric,Sdepartment from Admission;");

// Loop through the ResultSet and transfer in the Model
java.sql.ResultSetMetaData rsmd = rs.getMetaData();
int colNo = rsmd.getColumnCount();
while(rs.next()){
 Object[] objects = new Object[colNo];
 // tanks to umit ozkan for the bug fix!
 for(int i=0;i<colNo;i++){
  objects[i]=rs.getObject(i+1);
  }
 aModel.addRow(objects);
}
aTable.setFont(new Font("",Font.BOLD,15));
aTable.setEnabled(false);
aTable.setModel(aModel);

        
        JFrame listofstudentsframe=new JFrame("List Of Students");
        listofstudentsframe.setBounds(0,0,1400,700);
        ImageIcon ii=new ImageIcon("E:\\eidulfitr\\d1.png");
        listofstudentsframe.setIconImage(ii.getImage());
        JScrollPane scp=new JScrollPane(aTable);
        listofstudentsframe.add(scp);
        listofstudentsframe.setVisible(true);
       
    }
    
}


////////////////////////////////////////ADD TEACHER//////////////////////////////

package university.management.system;

import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.*;
import javax.swing.border.Border;

public class AddTeacher extends UniversityManagementSystem {
 public String tid; 
 boolean ch=false;
 JDialog tidempty,teacheradded,rollnull,checkbox;//copied from admission class
 JLabel tidemptymsg,teacheraddedmsg,rollnullerror,checkboxmsg;//copied from admission class
 JButton tidemptybut,teacheraddedbut,rollnullerrorbut,checkboxbut;//copied from addmision class
    public AddTeacher()
    {
         JFrame addteacherframe=new JFrame("Add Teacher");
         Container c=addteacherframe.getContentPane();
         c.setBackground(Color.lightGray);
         addteacherframe.setBounds(45,65,1200,600);
         ImageIcon ii=new ImageIcon("E:\\eidulfitr\\d1.png");
         addteacherframe.setLayout(null);
         addteacherframe.setIconImage(ii.getImage());
         JPanel addteacherpanel =new JPanel();
         addteacherpanel.setBounds(390,0,400,60);
         addteacherpanel.setBackground(Color.lightGray);
         JLabel addteacherlabel=new JLabel("Add Teacher");
         addteacherlabel.setForeground(Color.red);
         addteacherlabel.setBounds(10,7,300,40);
         Border border=BorderFactory.createLineBorder(Color.blue,6,true);
         addteacherpanel.setBorder(border);
         addteacherlabel.setFont(new Font("",Font.BOLD,40));
         
         
         
         
         
         ///////////////////////////////////////////////////////////////
         /////////////////////////////////////////////////////////////////
         //////////////////////////////////////////////////////////////////////
         ////////////////COMPONENETS////////////////////////////
         
         
       JLabel ltfname=new JLabel("Teacher First Name");
       ltfname.setBounds(55,75,200,40);
       ltfname.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(ltfname);
       JLabel ltlname=new JLabel("Teacher Last Name");
       ltlname.setBounds(55,120,200,40);
       ltlname.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(ltlname);
       JTextField ttlname=new JTextField(30);
       ttlname.setBounds(260,120,250,30);
       ttlname.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent ke)
            {
                char c=ke.getKeyChar();
                if((c>'z')||(c<'A'))
                {
                    ke.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
                
            }
        });
       addteacherframe.add(ttlname);
       
       
       JTextField ttfname=new JTextField(30);
       ttfname.setBounds(260,80,250,30);
       ttfname.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent ke)
            {
                
                char c=ke.getKeyChar();
                if((c>'z')||(c<'A'))
                {
                    
                    ke.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
                
            }
        });
       addteacherframe.add(ttfname);
       
       
       JLabel ltid=new JLabel("Teacher ID");
       ltid.setBounds(580,75,200,40);
       ltid.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(ltid);
       JTextField ttid=new JTextField(30);
       ttid.setBounds(755,75,250,30);
       addteacherframe.add(ttid);
       
       
      
       JLabel ltDob=new JLabel("Teacher DateOfBirth");
       ltDob.setBounds(55,165,200,40);
       ltDob.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(ltDob);
       JComboBox day=new JComboBox();   
       day.setBounds(260,160,80,30);
       addteacherframe.add(day);
       String[] dayarr=new String[31];
       int num=1;
       for(int i=0;i<31;i++)
       {
           dayarr[i]=String.valueOf(num);
           day.addItem(dayarr[i]);
           num++;
       }
       JComboBox month=new JComboBox();   
       month.setBounds(340,160,80,30);
       addteacherframe.add(month);
       String montharr[]={"Jan","Feb","March","April","May","June","July","Aug","Sep","Oct","Nov","Dec"};
       for(int i=0;i<12;i++)
       {
           month.addItem(montharr[i]);
       }
       Date d= new Date();
       JComboBox year=new JComboBox();   
       year.setBounds(420,160,80,30);
       addteacherframe.add(year);
       for(int i=1900;i<=d.getYear()+1900;i++)
       {
           String str=String.valueOf(i);
       year.addItem(str);
       }
       
       
       
       JLabel ltGender=new JLabel("Teacher Gender");
       ltGender.setBounds(55,210,200,40);
       ltGender.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(ltGender);
       ButtonGroup gender=new ButtonGroup();
       JLabel Male=new JLabel("Male");
       Male.setBounds(260,210,40,30);
       Male.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(Male);
       JRadioButton male=new JRadioButton();
       male.setBounds(300,210,20,30);
       addteacherframe.add(male);
       JLabel Female=new JLabel("Female");
       Female.setBounds(330,210,60,30);
       Female.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(Female);
       JRadioButton female=new JRadioButton();
       female.setBounds(391,210,20,30);
       addteacherframe.add(female);
       JLabel Other=new JLabel("Other");
       Other.setBounds(420,210,60,30);
       Other.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(Other);
       JRadioButton other=new JRadioButton();
       other.setBounds(470,210,20,30);
       addteacherframe.add(other);
       gender.add(male);
       gender.add(female);
       gender.add(other);
       
       
       
       JLabel ltmail=new JLabel("Teacher Mail");
       ltmail.setBounds(55,255,200,40);
       ltmail.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(ltmail);
       
       JTextField ttmail=new JTextField(30);
       ttmail.setBounds(260,260,250,30);
       addteacherframe.add(ttmail);
       
       
       JLabel ltPhone=new JLabel("Techer Phone");
       ltPhone.setBounds(55,300,200,40);
       ltPhone.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(ltPhone);
       JTextField ttphone=new JTextField();
       ttphone.setColumns(11);
       ttphone.setBounds(260,300,250,30);
       addteacherframe.add(ttphone);
       ttphone.addKeyListener(new KeyAdapter()
       {
           public void keyTyped(KeyEvent ke)
           {
               char c=ke.getKeyChar();
               if(c<'0'||c>'9')
               {
                   ke.consume();
                   Toolkit.getDefaultToolkit().beep();
               }
           }
       });
       
       
       JLabel ltaddress=new JLabel("Teacher Address");
       ltaddress.setBounds(55,345,200,40);
       ltaddress.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(ltaddress);
      
        JTextArea ttaddress=new JTextArea();
       ttaddress.setBounds(260,340,250,100);
       addteacherframe.add(ttaddress);
       
       
       JLabel ltcnic=new JLabel("Teacher CNIC");
       ltcnic.setBounds(580,120,200,40);
       ltcnic.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(ltcnic);
       JTextField ttcnic=new JTextField();
       ttcnic.setBounds(755,120,250,30);
       addteacherframe.add(ttcnic);
         
       
       JLabel ltqualification=new JLabel("Teacher's Qualification");
       ltqualification.setBounds(580,165,200,40);
       ltqualification.setFont(new Font("aa",Font.BOLD,15));
       addteacherframe.add(ltqualification);
       JComboBox ttqualification =new JComboBox();
       ttqualification.addItem("BE");
       ttqualification.addItem("BS");
       ttqualification.addItem("BA");
       ttqualification.addItem("BBA");
       ttqualification.addItem("B.Arch");
       ttqualification.addItem("BSN");
       
       ttqualification.addItem("MA");
       ttqualification.addItem("MBA");
       ttqualification.addItem("MS");
       
       ttqualification.addItem("Ph.D");
       ttqualification.addItem("psy.D");
       
       ttqualification.addItem("M.phil");
       ttqualification.setBounds(755,165,250,30);
       addteacherframe.add(ttqualification);
       
         
       JLabel ltsubject=new JLabel("Subject Alloted");
       ltsubject.setBounds(580,210,200,40);
       ltsubject.setFont(new Font("aa",Font.BOLD,15));  
       addteacherframe.add(ltsubject);
       JComboBox csubject=new JComboBox();
       csubject.setBounds(755,210,250,30);
       csubject.addItem("Object Oriented Programming");
       csubject.addItem("Data Structures and Alg");
       csubject.addItem("Calculus");
       csubject.addItem("Linear Algebra");
       csubject.addItem("Islamic Education");
       csubject.addItem("Programming Fundamentals");
       csubject.addItem("Basic electronics");
       csubject.addItem("Digital Logic Design");
       csubject.addItem("xyz");
       csubject.addItem("xyz");
       csubject.addItem("xyz");
       addteacherframe.add(csubject);
         
       JLabel ltsalary=new JLabel("Salary");
       ltsalary.setBounds(580,255,200,40);
       ltsalary.setFont(new Font("",Font.BOLD,15));
       addteacherframe.add(ltsalary);
       JTextField ttsalary=new JTextField(30);
       ttsalary.setBounds(755,255,250,30);
     
       addteacherframe.add(ttsalary);
       
       
       JButton addteacherbut=new JButton("Add");
       addteacherbut.setBounds(755,380,250,40);
       addteacherframe.add(addteacherbut);
       
        JCheckBox check=new JCheckBox();
       check.setBounds(55,470,30,20);
       addteacherframe.add(check);
       JLabel lcheck=new JLabel("Confirm submitting details of new Teacher.");
       lcheck.setBounds(90,470,250,20);
       addteacherframe.add(lcheck);
       
       
       
       
       ////////////////////////////////////////////////////////////////////////
       ///////////////////////////////////////////////////////////////////////
       ////////////////ADDING BUTTON///////////////////////////////////////////
       
       addteacherbut.addActionListener(new ActionListener()
       {
           public void actionPerformed(ActionEvent ae)
           {
               if(!(ttid.getText().isEmpty()))
               {
                   
                   if(check.isSelected())
                   {
                       tid=ttid.getText();
                   
                       try {
                           st=con.createStatement();
                           ResultSet rs=st.executeQuery("Select Tid from Teacher");
                          
                           while(rs.next())
                           {
                               if(tid.equals(rs.getString("Tid")))
                               {
                                   ch=true;
                                   break;
                               }
                           }
                           if(ch)
                           {
                              tidempty=new JDialog(addteacherframe,"warning",true);
                              tidempty.setLayout(null);
                              tidempty.setBounds(400,250,340,150);
                              Container c=tidempty.getContentPane();
                              c.setBackground(Color.lightGray);
                              tidemptymsg=new JLabel("Selected Teacher ID already exist.");
                              tidemptymsg.setBounds(40,10,300,40);
                              tidempty.add(tidemptymsg);
                              tidemptybut =new JButton("Go back");
                              tidemptybut.setBounds(110,60,100,30);
                              tidemptybut.setBackground(Color.black);
                              tidemptybut.setForeground(Color.white);
                              tidemptybut.addActionListener(new ActionListener()
                       {
                           public void actionPerformed(ActionEvent ae)
                           {
                               tidempty.dispose();
                           }
                       });
                       tidempty.add(tidemptybut);
                       tidempty.setVisible(true);
                           }
                           else
                           {
                               
                               PreparedStatement pst=con.prepareStatement("Insert into Teacher (Tfname,Tlname,Tgender,Tmail,Tphone,Taddress,Tid,Tcnic,Tqua,Tsub,Tsalary)values(?,?,?,?,?,?,?,?,?,?,?);");
                               pst.setString(1,ttfname.getText());
                               pst.setString(2,ttlname.getText());
                               ///////////////////////////////////////////
                               //Setting for gender in database
                               String Gender="";
                               if(male.isSelected())
                               {
                                   Gender="Male";
                               }
                               else if(female.isSelected())
                               {
                                   Gender="Female";
                               }
                               else
                               {
                                   Gender="Other";
                               }
                               pst.setString(3,Gender);
                               pst.setString(4,ttmail.getText());
                               pst.setString(5,ttphone.getText());
                               pst.setString(6,ttaddress.getText());
                               pst.setString(7,ttid.getText());
                               pst.setString(8,ttcnic.getText());
                               pst.setString(9,ttqualification.getSelectedItem().toString());
                               pst.setString(10,csubject.getSelectedItem().toString());
                               pst.setString(11,String.valueOf(ttsalary.getText()));
                               pst.executeUpdate();
                               
                               
                               
                               //////////////////////////////////////////////////
                               /////////SUCCESSFULLY SUBMITED BOX/////////////
                       teacheradded=new JDialog(addteacherframe,"warning",true);
                       teacheradded.setLayout(null);
                       teacheradded.setBounds(400,250,340,150);
                       Container c=teacheradded.getContentPane();
                       c.setBackground(Color.lightGray);
                       teacheraddedmsg=new JLabel("Teacher Added Successfully.");
                       teacheraddedmsg.setBounds(40,10,300,40);
                       teacheradded.add(teacheraddedmsg);
                       teacheraddedbut =new JButton("Go back");
                       teacheraddedbut.setBounds(110,60,100,30);
                       teacheraddedbut.setBackground(Color.black);
                       teacheraddedbut.setForeground(Color.white);
                       teacheraddedbut.addActionListener(new ActionListener()
                       {
                           public void actionPerformed(ActionEvent ae)
                           {
                               teacheradded.dispose();
                           }
                       });
                       teacheradded.add(teacheraddedbut);
                       teacheradded.setVisible(true);
                               
                               
                               
                               
                           }
                           
                           
                           
                           
                       } catch (SQLException ex) {
                           Logger.getLogger(AddTeacher.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else
                   {
       /////////////////////////////////////////////////////////////////////////////////////////////////////
                       /////////////////CHECKBOX NOT SELECTED ERROR////////////////////////////////////////
                       checkbox=new JDialog(addteacherframe,"warning",true);
                       checkbox.setLayout(null);
                       checkbox.setBounds(400,250,400,150);
                       Container c=checkbox.getContentPane();
                       c.setBackground(Color.lightGray);
                       checkboxmsg=new JLabel("you have not confirm submission please check checkbox.");
                       checkboxmsg.setBounds(40,10,400,40);
                       checkbox.add(checkboxmsg);
                       checkboxbut =new JButton("Go back");
                       checkboxbut.setBounds(140,60,100,30);
                       checkboxbut.setBackground(Color.black);
                       checkboxbut.setForeground(Color.white);
                       checkboxbut.addActionListener(new ActionListener()
                       {
                           public void actionPerformed(ActionEvent ae)
                           {
                               checkbox.dispose();
                           }
                       });
                       checkbox.add(checkboxbut);
                       checkbox.setVisible(true);
                       
                       
                   }
               }
               else
               {
                   
                   
                       rollnull=new JDialog(addteacherframe,"warning",true);
                       rollnull.setLayout(null);
                       rollnull.setBounds(400,250,340,150);
                       Container c=rollnull.getContentPane();
                       c.setBackground(Color.lightGray);
                       rollnullerror=new JLabel("Teacher ID cannot be empty.please fill.");
                       rollnullerror.setBounds(40,10,300,40);
                       rollnull.add(rollnullerror);
                       rollnullerrorbut =new JButton("Go back");
                       rollnullerrorbut.setBounds(110,60,100,30);
                       rollnullerrorbut.setBackground(Color.black);
                       rollnullerrorbut.setForeground(Color.white);
                       rollnullerrorbut.addActionListener(new ActionListener()
                       {
                           public void actionPerformed(ActionEvent ae)
                           {
                               rollnull.dispose();
                           }
                       });
                       rollnull.add(rollnullerrorbut);
                       rollnull.setVisible(true);
                   
                   
               }
           }
       });
       
       
         addteacherpanel.add(addteacherlabel);
         addteacherframe.add(addteacherpanel);
         addteacherframe.setVisible(true);
    }
    
}
/////////////////////////////////////////////////////////////REMOVE TEACHER//////////////////////////////////////////////////////

package university.management.system;

import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.border.Border;

public class RemoveTeacher extends UniversityManagementSystem{
PreparedStatement pst;  
JDialog searchdialog,tidnotexist,teacherremoved,checkboxdialog;
JLabel searchmsg,tidnotexistmsg,teacherremovedmsg,checkboxmsg;
JButton searchbutton,tidnotexistbut,teacherremovedbut,checkboxbut;
String teacheridinsearch;
boolean s=false;
    
    public RemoveTeacher()
    {
        JFrame removeteacherframe=new JFrame("Remove Teacher");
        removeteacherframe.setBounds(45,65,1200,600);
        removeteacherframe.setLayout(null);
        
        Container c=removeteacherframe.getContentPane();
        ImageIcon ii=new ImageIcon("E:\\eidulfitr\\d1.png");
        removeteacherframe.setIconImage(ii.getImage());
        c.setBackground(Color.lightGray);
      
        
         removeteacherframe.addWindowListener(new WindowAdapter()
       {
           public void windowClosing(WindowEvent we)
           {
               removeteacherframe.dispose();
           }
       });
         
         JPanel removeteacherpanel =new JPanel();
         removeteacherpanel.setBounds(390,0,400,60);
         removeteacherpanel.setBackground(Color.lightGray);
         JLabel removeteacherlabel=new JLabel("Remove Teacher");
         removeteacherlabel.setForeground(Color.red);
         removeteacherlabel.setBounds(10,7,300,40);
         removeteacherpanel.add(removeteacherlabel);
         Border border=BorderFactory.createLineBorder(Color.blue,6,true);
         removeteacherpanel.setBorder(border);
         removeteacherlabel.setFont(new Font("",Font.BOLD,40));
         
         
         
         ////////////////////////////////////////////////////////////////////////
         ///////////////////////////////////////////////////////////////////////
         ///////////////////////SETTING COMPONENTS ON FRAME////////////////////
         
         
           
       JLabel ltfname=new JLabel("Teacher First Name");
       ltfname.setBounds(55,75,200,40);
       ltfname.setFont(new Font("aa",Font.BOLD,15));
       removeteacherframe.add(ltfname);
       JLabel ltlname=new JLabel("Teacher Last Name");
       ltlname.setBounds(55,120,200,40);
       ltlname.setFont(new Font("aa",Font.BOLD,15));
       removeteacherframe.add(ltlname);
       JTextField ttlname=new JTextField(30);
       ttlname.setBounds(260,120,250,30);
       ttlname.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent ke)
            {
                char c=ke.getKeyChar();
                if((c>'z')||(c<'A'))
                {
                    ke.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
                
            }
        });
       removeteacherframe.add(ttlname);
       
       
       JTextField ttfname=new JTextField(30);
       ttfname.setBounds(260,80,250,30);
       ttfname.addKeyListener(new KeyAdapter()
        {
            public void keyTyped(KeyEvent ke)
            {
                
                char c=ke.getKeyChar();
                if((c>'z')||(c<'A'))
                {
                    
                    ke.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
                
            }
        });
       removeteacherframe.add(ttfname);
       
       
       JLabel ltid=new JLabel("Teacher ID");
       ltid.setBounds(580,75,200,40);
       ltid.setFont(new Font("aa",Font.BOLD,15));
       removeteacherframe.add(ltid);
       JTextField ttid=new JTextField(30);
       ttid.setBounds(755,75,250,30);
       removeteacherframe.add(ttid);
       JLabel ltGender=new JLabel("Teacher Gender");
       ltGender.setBounds(55,165,200,40);
       ltGender.setFont(new Font("aa",Font.BOLD,15));
       removeteacherframe.add(ltGender);
       ButtonGroup gender=new ButtonGroup();
       JLabel Male=new JLabel("Male");
       Male.setBounds(260,165,40,30);
       Male.setFont(new Font("aa",Font.BOLD,15));
       removeteacherframe.add(Male);
       JRadioButton male=new JRadioButton();
       male.setBounds(300,165,20,30);
       removeteacherframe.add(male);
       JLabel Female=new JLabel("Female");
       Female.setBounds(330,165,60,30);
       Female.setFont(new Font("aa",Font.BOLD,15));
       removeteacherframe.add(Female);
       JRadioButton female=new JRadioButton();
       female.setBounds(391,165,20,30);
       removeteacherframe.add(female);
       JLabel Other=new JLabel("Other");
       Other.setBounds(420,165,60,30);
       Other.setFont(new Font("aa",Font.BOLD,15));
       removeteacherframe.add(Other);
       JRadioButton other=new JRadioButton();
       other.setBounds(470,165,20,30);
       removeteacherframe.add(other);
       gender.add(male);
       gender.add(female);
       gender.add(other);
       
       
       
       JLabel ltmail=new JLabel("Teacher Mail");
       ltmail.setBounds(55,210,200,40);
       ltmail.setFont(new Font("aa",Font.BOLD,15));
       removeteacherframe.add(ltmail);
       
       JTextField ttmail=new JTextField(30);
       ttmail.setBounds(260,210,250,30);
       removeteacherframe.add(ttmail);
       
       
       JLabel ltPhone=new JLabel("Techer Phone");
       ltPhone.setBounds(55,255,200,40);
       ltPhone.setFont(new Font("aa",Font.BOLD,15));
       removeteacherframe.add(ltPhone);
       JTextField ttphone=new JTextField();
       ttphone.setColumns(11);
       ttphone.setBounds(260,255,250,30);
       removeteacherframe.add(ttphone);
       ttphone.addKeyListener(new KeyAdapter()
       {
           public void keyTyped(KeyEvent ke)
           {
               char c=ke.getKeyChar();
               if(c<'0'||c>'9')
               {
                   ke.consume();
                   Toolkit.getDefaultToolkit().beep();
               }
           }
       });
       
       
       JLabel ltaddress=new JLabel("Teacher Address");
       ltaddress.setBounds(55,300,200,40);
       ltaddress.setFont(new Font("aa",Font.BOLD,15));
       removeteacherframe.add(ltaddress);
      
        JTextArea ttaddress=new JTextArea();
       ttaddress.setBounds(260,300,250,100);
       removeteacherframe.add(ttaddress);
       
       
       JLabel ltcnic=new JLabel("Teacher CNIC");
       ltcnic.setBounds(580,120,200,40);
       ltcnic.setFont(new Font("aa",Font.BOLD,15));
       removeteacherframe.add(ltcnic);
       JTextField ttcnic=new JTextField();
       ttcnic.setBounds(755,120,250,30);
       removeteacherframe.add(ttcnic);
         
       
       JLabel ltqualification=new JLabel("Teacher's Qualification");
       ltqualification.setBounds(580,165,200,40);
       ltqualification.setFont(new Font("aa",Font.BOLD,15));
       removeteacherframe.add(ltqualification);
       JComboBox ttqualification =new JComboBox();
       ttqualification.addItem("BE");
       ttqualification.addItem("BS");
       ttqualification.addItem("BA");
       ttqualification.addItem("BBA");
       ttqualification.addItem("B.Arch");
       ttqualification.addItem("BSN");
       
       ttqualification.addItem("MA");
       ttqualification.addItem("MBA");
       ttqualification.addItem("MS");
       
       ttqualification.addItem("Ph.D");
       ttqualification.addItem("psy.D");
       
       ttqualification.addItem("M.phil");
       ttqualification.setBounds(755,165,250,30);
       removeteacherframe.add(ttqualification);
       
         
       JLabel ltsubject=new JLabel("Subject Alloted");
       ltsubject.setBounds(580,210,200,40);
       ltsubject.setFont(new Font("aa",Font.BOLD,15));  
       removeteacherframe.add(ltsubject);
       JComboBox csubject=new JComboBox();
       csubject.setBounds(755,210,250,30);
       csubject.addItem("Object Oriented Programming");
       csubject.addItem("Data Structures and Alg");
       csubject.addItem("Calculus");
       csubject.addItem("Linear Algebra");
       csubject.addItem("Islamic Education");
       csubject.addItem("Programming Fundamentals");
       csubject.addItem("Basic electronics");
       csubject.addItem("Digital Logic Design");
       csubject.addItem("xyz");
       csubject.addItem("xyz");
       csubject.addItem("xyz");
       removeteacherframe.add(csubject);
         
       JLabel ltsalary=new JLabel("Salary");
       ltsalary.setBounds(580,255,200,40);
       ltsalary.setFont(new Font("",Font.BOLD,15));
       removeteacherframe.add(ltsalary);
       JTextField ttsalary=new JTextField(30);
       ttsalary.setBounds(755,255,250,30);
     
       removeteacherframe.add(ttsalary);
       
       
      
       
        JCheckBox check=new JCheckBox();
       check.setBounds(55,430,30,20);
       removeteacherframe.add(check);
       JLabel lcheck=new JLabel("Confirm removing Teacher.");
       lcheck.setBounds(90,430,250,20);
       removeteacherframe.add(lcheck);
         
       JLabel searchlabel=new JLabel("Search Teachers'Id");
       searchlabel.setBounds(55,470,250,30);
       searchlabel.setFont(new Font("",Font.BOLD,25));
       removeteacherframe.add(searchlabel);
         
       JTextField searchtext=new JTextField(30);
       searchtext.setBounds(300,470,250,30);
       removeteacherframe.add(searchtext);
       
       //ImageIcon sii=new ImageIcon("â€ªâ€ªE:\\eidulfitr\\s1.png");
       
       JButton searchbut=new JButton("Search");
       
       searchbut.setBounds(570,470,140,30);
      //   ImageIcon abc=new ImageIcon("E:\\eidulfitr\\s2.png");
        // searchbut.setIcon(abc);
     searchbut.setBackground(Color.black);
     searchbut.setForeground(Color.white);
     removeteacherframe.add(searchbut);
       
     searchbut.addActionListener(new ActionListener()
     {
         public void actionPerformed(ActionEvent ae)
         {
             if(searchtext.getText().isEmpty())
             {
                              searchdialog=new JDialog(removeteacherframe,"warning",true);
                              searchdialog.setLayout(null);
                              searchdialog.setBounds(400,250,340,150);
                              Container c=searchdialog.getContentPane();
                              c.setBackground(Color.lightGray);
                              searchmsg=new JLabel("Search box is empty.");
                              searchmsg.setBounds(40,10,300,40);
                              searchdialog.add(searchmsg);
                              searchbutton =new JButton("Go back");
                              searchbutton.setBounds(110,60,100,30);
                              searchbutton.setBackground(Color.black);
                              searchbutton.setForeground(Color.white);
                              searchbutton.addActionListener(new ActionListener()
                       {
                           public void actionPerformed(ActionEvent ae)
                           {
                               searchdialog.dispose();
                           }
                       });
                       searchdialog.add(searchbutton);
                       searchdialog.setVisible(true);
             }//if////////////////////////////////////////////////////////////
             else///////////search box is not empty//////////////
             {
                 
                 
                     teacheridinsearch=searchtext.getText();
                     try {
                         ResultSet rs=st.executeQuery("Select Tid from Teacher");
                         while(rs.next())
                         {
                            if(teacheridinsearch.equals(rs.getString("Tid")))
                            {
                                s=true;
                                break;
                            }
                         }
                     } catch (SQLException ex) {
                         Logger.getLogger(RemoveTeacher.class.getName()).log(Level.SEVERE, null, ex);
                     }
 //////////////////////////////////////////////////////////////////////////////                    
                     if(s)//Entered roll num exists 
                     {
                         try {
                             pst=con.prepareStatement("Select * from Teacher where Tid=?;");
                             pst.setString(1, teacheridinsearch);
                             ResultSet rs=pst.executeQuery();
                             while(rs.next())
                             {
                                 ttfname.setText(rs.getString("Tfname"));
                                 ttlname.setText(rs.getString("Tlname"));
                                 if(rs.getString("Tgender").equals("Male"))
                                     male.setSelected(true);
                                 else if(rs.getString("Tgender").equals("Female"))
                                     female.setSelected(true);
                                 else
                                     other.setSelected(true);
                                 ttmail.setText(rs.getString("Tmail"));
                                 ttphone.setText(rs.getString("Tphone"));
                                 ttcnic.setText((rs.getString("Tcnic")));
                                 ttqualification.setSelectedItem(rs.getString("Tqua"));
                                 csubject.setSelectedItem(rs.getString("Tsub"));
                                 ttsalary.setText(String.valueOf(rs.getInt("Tsalary")));
                                 ttaddress.setText(rs.getString("Taddress"));
                                 ttid.setText(rs.getString("Tid"));
                                 
                                 
                                 
                                 
                             }
                             
                         } catch (SQLException ex) {
                             Logger.getLogger(RemoveTeacher.class.getName()).log(Level.SEVERE, null, ex);
                         }
                     }else//entered roll num does not exist
                     {
                         
                         
                              tidnotexist=new JDialog(removeteacherframe,"warning",true);
                              tidnotexist.setLayout(null);
                              tidnotexist.setBounds(400,250,340,150);
                              Container c=tidnotexist.getContentPane();
                              c.setBackground(Color.lightGray);
                              tidnotexistmsg=new JLabel("Selected Teacher ID Does not exist.");
                              tidnotexistmsg.setBounds(40,10,300,40);
                              tidnotexist.add(tidnotexistmsg);
                              tidnotexistbut =new JButton("Go back");
                              tidnotexistbut.setBounds(110,60,100,30);
                              tidnotexistbut.setBackground(Color.black);
                              tidnotexistbut.setForeground(Color.white);
                              tidnotexistbut.addActionListener(new ActionListener()
                       {
                           public void actionPerformed(ActionEvent ae)
                           {
                               tidnotexist.dispose();
                           }
                       });
                       tidnotexist.add(tidnotexistbut);
                       tidnotexist.setVisible(true);
                         
                         
                     }
////////////////////////////////////////////////////////////////////////////////
             }
         
             }
         
     });
      
       
     ////////////////////////////////////////////////////////////////////////
     ////////////////////REMOVE BUTTON LOGIC////////////////////////////////
       JButton removeteacherbut=new JButton("Remove");
       removeteacherbut.setBounds(755,380,250,40);
       removeteacherbut.setBackground(Color.black);
       removeteacherbut.setForeground(Color.white);
       removeteacherframe.add(removeteacherbut);
       removeteacherbut.addActionListener(new ActionListener()
       {
           public void actionPerformed(ActionEvent ae)
           {
               if(check.isSelected()&& !(teacheridinsearch.isEmpty()))
               {
                   try {
                       PreparedStatement pst=con.prepareStatement("Delete From Teacher where Tid=?;");
                       pst.setString(1, teacheridinsearch);
                       pst.executeUpdate();
                       
                              teacherremoved=new JDialog(removeteacherframe,"warning",true);
                              teacherremoved.setLayout(null);
                              teacherremoved.setBounds(400,250,340,150);
                              Container c=teacherremoved.getContentPane();
                              c.setBackground(Color.lightGray);
                              teacherremovedmsg=new JLabel("Teacher removed successfully.");
                              teacherremovedmsg.setBounds(40,10,300,40);
                              teacherremoved.add(teacherremovedmsg);
                              teacherremovedbut =new JButton("Go back");
                              teacherremovedbut.setBounds(110,60,100,30);
                              teacherremovedbut.setBackground(Color.black);
                              teacherremovedbut.setForeground(Color.white);
                              teacherremovedbut.addActionListener(new ActionListener()
                       {
                           public void actionPerformed(ActionEvent ae)
                           {
                               teacherremoved.dispose();
                           }
                       });
                       teacherremoved.add(teacherremovedbut);
                       teacherremoved.setVisible(true);
                               
                       
                   } catch (SQLException ex) {
                       Logger.getLogger(RemoveTeacher.class.getName()).log(Level.SEVERE, null, ex);
                   }
               }
               else/////CHECKBOXNOTSELECTED///////////////////////////////////
               {
                              checkboxdialog=new JDialog(removeteacherframe,"warning",true);
                              checkboxdialog.setLayout(null);
                              checkboxdialog.setBounds(400,250,400,150);
                              Container c=checkboxdialog.getContentPane();
                              c.setBackground(Color.lightGray);
                              checkboxmsg=new JLabel("You have not confirmed removal,please check checkbox");
                              checkboxmsg.setBounds(40,10,400,40);
                              checkboxdialog.add(checkboxmsg);
                              checkboxbut =new JButton("Go back");
                              checkboxbut.setBounds(140,60,100,30);
                              checkboxbut.setBackground(Color.black);
                              checkboxbut.setForeground(Color.white);
                              checkboxbut.addActionListener(new ActionListener()
                       {
                           public void actionPerformed(ActionEvent ae)
                           {
                               checkboxdialog.dispose();
                           }
                       });
                       checkboxdialog.add(checkboxbut);
                       checkboxdialog.setVisible(true);
               }
           }
       });
     
     
         removeteacherframe.add(removeteacherpanel);
         removeteacherframe.setVisible(true);
     
    }
}
////////////////////////////////////////////////////////////////////////////////DATA OF TEACHER////////////////////////////////

package university.management.system;

import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.TextArea;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.*;

public class TeacherInformation extends UniversityManagementSystem{
    JDialog tiddoesnotexist,searchboxempty;
    JLabel tiddoesnotexistmsg,searchboxemptymsg;
    JButton tiddoesnotexistbut,searchboxemptybut;
    String TID="";
    boolean eq=false;
    public TeacherInformation()
    {
         JFrame teacherinfoframe=new JFrame("Teacher's Information");
         Container c=teacherinfoframe.getContentPane();
         c.setBackground(Color.lightGray);
         teacherinfoframe.setBounds(45,65,1200,600);
         ImageIcon ii=new ImageIcon("E:\\eidulfitr\\d1.png");
         teacherinfoframe.setLayout(null);
         teacherinfoframe.setIconImage(ii.getImage());
         JPanel teacherinfopanel =new JPanel();
         teacherinfopanel.setBounds(370,0,450,60);
         teacherinfopanel.setBackground(Color.lightGray);
         JLabel teacherinfolabel=new JLabel("Teacher's Information");
         teacherinfolabel.setForeground(Color.red);
         teacherinfolabel.setBounds(10,7,300,40);
         Border border=BorderFactory.createLineBorder(Color.blue,6,true);
         teacherinfopanel.setBorder(border);
         teacherinfolabel.setFont(new Font("",Font.BOLD,40));
         teacherinfopanel.add(teacherinfolabel);
         
         
         
          
///////////////////////////////////////////////////////////////////////////
/////////////////////Creating JPanel for components //////////////////////////

JPanel allcomponents=new JPanel();
allcomponents.setLayout(null);
allcomponents.setBounds(55,53,1070,380);
allcomponents.setBackground(Color.red);

allcomponents.setVisible(false);
teacherinfoframe.add(allcomponents);

JLabel lfname=new JLabel("Teacher's First Name");
lfname.setFont(new Font("",Font.BOLD,15));
lfname.setBounds(55,30,200,30);
allcomponents.add(lfname);
JTextField tfname=new JTextField(30);
tfname.setBounds(270,30,250,30);
allcomponents.add(tfname);
JLabel llname=new JLabel("Teacher's Last Name");
llname.setBounds(55,70,200,30);
llname.setFont(new Font("",Font.BOLD,15));
allcomponents.add(llname);
JTextField tlname=new JTextField(30);
tlname.setBounds(270,70,250,30);
allcomponents.add(tlname);
JLabel lgender=new JLabel("Teacher's Gender");
lgender.setBounds(55,110,200,30);
lgender.setFont(new Font("",Font.BOLD,15));
allcomponents.add(lgender);
 ButtonGroup gender=new ButtonGroup();
       JLabel Male=new JLabel("Male");
       Male.setBounds(260,110,40,30);
       Male.setFont(new Font("aa",Font.BOLD,15));
       allcomponents.add(Male);
       JRadioButton male=new JRadioButton();
       male.setBounds(300,110,20,30);
       allcomponents.add(male);
       JLabel Female=new JLabel("Female");
       Female.setBounds(330,110,60,30);
       Female.setFont(new Font("aa",Font.BOLD,15));
       allcomponents.add(Female);
       JRadioButton female=new JRadioButton();
       female.setBounds(391,110,20,30);
       allcomponents.add(female);
       JLabel Other=new JLabel("Other");
       Other.setBounds(420,110,60,30);
       Other.setFont(new Font("aa",Font.BOLD,15));
       allcomponents.add(Other);
       JRadioButton other=new JRadioButton();
       other.setBounds(470,110,20,30);
       allcomponents.add(other);
       gender.add(male);
       gender.add(female);
       gender.add(other);
       JLabel lmail=new JLabel("Teacher's mail");
       lmail.setFont(new Font("",Font.BOLD,15));
       lmail.setBounds(55,150,200,30);
       allcomponents.add(lmail);
       JTextField tmail=new JTextField(30);
       tmail.setBounds(270,150,250,30);
       allcomponents.add(tmail);
       JLabel laddress=new JLabel("Teacher's Address");
       laddress.setFont(new Font("",Font.BOLD,15));
       laddress.setBounds(55,190,200,30);
       allcomponents.add(laddress);
       TextArea taddress=new TextArea();
       taddress.setBounds(270,190,250,100);
       allcomponents.add(taddress);
       JLabel lphone=new JLabel("Teacher's Phone");
       lphone.setFont(new Font("",Font.BOLD,15));
       lphone.setBounds(55,300,200,30);
       allcomponents.add(lphone);
       JTextField tphone=new JTextField(30);
       tphone.setBounds(270,300,250,30);
       allcomponents.add(tphone);
       JLabel lid=new JLabel("Teacher ID");
       lid.setFont(new Font("",Font.BOLD,15));
       lid.setBounds(600,30,200,30);
       allcomponents.add(lid);
       JTextField tid=new JTextField(30);
       tid.setBounds(800,30,250,30);
       allcomponents.add(tid);
       JLabel lcnic=new JLabel("Teacher CNIC");
       lcnic.setFont(new Font("",Font.BOLD,15));
       lcnic.setBounds(600,70,200,30);
       allcomponents.add(lcnic);
       JTextField tcnic=new JTextField(30);
       tcnic.setBounds(800,70,250,30);
       allcomponents.add(tcnic);
       JLabel ltqualification=new JLabel("Teacher's Qualification");
       ltqualification.setBounds(600,110,200,40);
       ltqualification.setFont(new Font("aa",Font.BOLD,15));
       allcomponents.add(ltqualification);
       JComboBox ttqualification =new JComboBox();
       ttqualification.addItem("BE");
       ttqualification.addItem("BS");
       ttqualification.addItem("BA");
       ttqualification.addItem("BBA");
       ttqualification.addItem("B.Arch");
       ttqualification.addItem("BSN");
       
       ttqualification.addItem("MA");
       ttqualification.addItem("MBA");
       ttqualification.addItem("MS");
       
       ttqualification.addItem("Ph.D");
       ttqualification.addItem("psy.D");
       
       ttqualification.addItem("M.phil");
       ttqualification.setBounds(800,110,250,30);
       allcomponents.add(ttqualification);
       JLabel ltsubject=new JLabel("Subject Alloted");
       ltsubject.setBounds(600,150,200,40);
       ltsubject.setFont(new Font("aa",Font.BOLD,15));  
       allcomponents.add(ltsubject);
       JComboBox csubject=new JComboBox();
       csubject.setBounds(800,150,250,30);
       csubject.addItem("Object Oriented Programming");
       csubject.addItem("Data Structures and Alg");
       csubject.addItem("Calculus");
       csubject.addItem("Linear Algebra");
       csubject.addItem("Islamic Education");
       csubject.addItem("Programming Fundamentals");
       csubject.addItem("Basic electronics");
       csubject.addItem("Digital Logic Design");
       csubject.addItem("xyz");
       csubject.addItem("xyz");
       csubject.addItem("xyz");
       allcomponents.add(csubject);
       JLabel ltsalary=new JLabel("Salary");
       ltsalary.setBounds(600,190,200,30);
       ltsalary.setFont(new Font("",Font.BOLD,15));
       allcomponents.add(ltsalary);
       JTextField ttsalary=new JTextField(30);
       ttsalary.setBounds(800,190,250,30);
     
       allcomponents.add(ttsalary);
       
////////////////////////////////////////////////////////////////////////////////
///////////////////////JPanel End/////////////////////////////////////////////






        
///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
////////////////////////Search Teacher's ID////////////////////////////////////////

JLabel searchteacheridlabel=new JLabel("Search Teacher's ID");
searchteacheridlabel.setBounds(55,470,300,30);
searchteacheridlabel.setFont(new Font("",Font.BOLD,30));
teacherinfoframe.add(searchteacheridlabel);
JTextField searchteacheridtext=new JTextField(30);
searchteacheridtext.setBounds(360,470,250,40);
teacherinfoframe.add(searchteacheridtext);
JButton searchteacheridbut=new JButton("Search");
searchteacheridbut.setBounds(615,470,80,40);
searchteacheridbut.setBackground(Color.black);
searchteacheridbut.setForeground(Color.white);
teacherinfoframe.add(searchteacheridbut);
searchteacheridbut.addActionListener(new ActionListener()
{
 public void actionPerformed(ActionEvent ae)
 {
     
     if(!(searchteacheridtext.getText().isEmpty()))/////////////Searchbox is not empty/////////////////
     {
       //  System.out.println("Box is not empty");
         
     TID=searchteacheridtext.getText();
     try {
         ResultSet rs=st.executeQuery("SELECT Tid from Teacher;");
         
         while(rs.next())//fetching TID from Teacher Table
         {
             if(TID.equals(rs.getString("Tid")))//check if TID is in TEacher or not?
             {
                 eq=true;
                 break;
             }
         }
         if(eq)//IF teacher I present then Execute this block
         {
            // System.out.println("Tid exists");
            allcomponents.setVisible(true);
            PreparedStatement pst=con.prepareStatement("Select * from Teacher where Tid=?;");
            pst.setString(1, TID);
            ResultSet rs1=pst.executeQuery();
            rs1.next();
            //Now we have result set of Teachers data with roll no TID
            
            tfname.setText(rs1.getString("Tfname"));
            tlname.setText(rs1.getString("Tlname"));
            String GENDER;
            if(rs1.getString("Tgender").equals("Male"))
                male.setSelected(true);
            else if(rs1.getString("Tgender").equals("Female"))
             female.setSelected(true);
            else
                other.setSelected(true);
            tmail.setText(rs1.getString("Tmail"));
            tphone.setText(String.valueOf(rs1.getString("Tphone")));
            taddress.setText(rs1.getString("Taddress"));
            tid.setText(rs1.getString("Tid"));
            tcnic.setText(String.valueOf(rs1.getString("Tcnic")));
            ttqualification.setSelectedItem(rs1.getString("Tqua"));
            csubject.setSelectedItem(rs1.getString("Tsub"));
            ttsalary.setText(String.valueOf(rs1.getString("Tsalary")));
            //System.out.println("Data fetched");
            
       
    ///////////////////////////DATA FETCHED SUCCESSFULLY////////////////
    
            
            
            
            
            
         }else//if Teacher id is not in  Teacher table then exceute this block;
         {
    //////////////////ROLL NO DOES NOT exist
                       tiddoesnotexist=new JDialog(teacherinfoframe,"warning",true);
                       tiddoesnotexist.setLayout(null);
                       tiddoesnotexist.setBounds(400,250,340,150);
                       Container c=tiddoesnotexist.getContentPane();
                       c.setBackground(Color.lightGray);
                       tiddoesnotexistmsg=new JLabel("Teacher Id does not exist");
                       tiddoesnotexistmsg.setBounds(40,10,300,40);
                       tiddoesnotexist.add(tiddoesnotexistmsg);
                       tiddoesnotexistbut =new JButton("Go back");
                       tiddoesnotexistbut.setBounds(110,60,100,30);
                       tiddoesnotexistbut.setBackground(Color.black);
                       tiddoesnotexistbut.setForeground(Color.white);
                       tiddoesnotexistbut.addActionListener(new ActionListener()
                       {
                           public void actionPerformed(ActionEvent ae)
                           {
                               tiddoesnotexist.dispose();
                           }
                       });
                       tiddoesnotexist.add(tiddoesnotexistbut);
                       tiddoesnotexist.setVisible(true);
              
             //System.out.println("No");
         }
     } catch (SQLException ex) {
         Logger.getLogger(TeacherInformation.class.getName()).log(Level.SEVERE, null, ex);
     }
 }
     
 else///////////////Search box is empty////////////////////////////////////////////
     {
       //  System.out.println("Search Box is empty");
       
                       searchboxempty=new JDialog(teacherinfoframe,"warning",true);
                       searchboxempty.setLayout(null);
                       searchboxempty.setBounds(400,250,340,150);
                       Container c=searchboxempty.getContentPane();
                       c.setBackground(Color.lightGray);
                       searchboxemptymsg=new JLabel("Search box is empty.");
                       searchboxemptymsg.setBounds(40,10,300,40);
                       searchboxempty.add(searchboxemptymsg);
                       searchboxemptybut =new JButton("Go back");
                       searchboxemptybut.setBounds(110,60,100,30);
                       searchboxemptybut.setBackground(Color.black);
                       searchboxemptybut.setForeground(Color.white);
                       searchboxemptybut.addActionListener(new ActionListener()
                       {
                           public void actionPerformed(ActionEvent ae)
                           {
                               searchboxempty.dispose();
                           }
                       });
                       searchboxempty.add(searchboxemptybut);
                       searchboxempty.setVisible(true);
       
     }
 }
});
         
///////////////////////////////////////////////////////////////////////////
//////////////////Search Button Logic End//////////////////////////////////
         


         teacherinfoframe.add(teacherinfopanel);
         teacherinfoframe.setVisible(true);
    }
    
}
////////////////////////////////////////////////////////////LIST OF TEACHERS///////////////////////////

package university.management.system;

import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import static university.management.system.UniversityManagementSystem.st;


public class TeachersList extends UniversityManagementSystem{
    
    public TeachersList() throws SQLException
    {
        JTable aTable=new JTable();
    // TableModel definition
String[] tableColumnsName = {"fame","lname","gender","Mail","Phone","Address","ID","Cnic","Qualification","Subject Alloted","Salary"}; 
DefaultTableModel aModel = (DefaultTableModel) aTable.getModel();
aModel.setColumnIdentifiers(tableColumnsName);

// the query
ResultSet rs = 
   st.executeQuery("select Tfname,Tlname,Tgender,Tmail,Tphone,Taddress,Tid,Tcnic,Tqua,Tsub,Tsalary from Teacher;");

// Loop through the ResultSet and transfer in the Model
java.sql.ResultSetMetaData rsmd = rs.getMetaData();
int colNo = rsmd.getColumnCount();
while(rs.next()){
 Object[] objects = new Object[colNo];
 // tanks to umit ozkan for the bug fix!
 for(int i=0;i<colNo;i++){
  objects[i]=rs.getObject(i+1);
  }
 aModel.addRow(objects);
}
aTable.setFont(new Font("",Font.BOLD,15));
aTable.setEnabled(false);
aTable.setModel(aModel);

        
        JFrame listofteachersframe=new JFrame("List Of Teachers");
        listofteachersframe.setBounds(0,0,1400,700);
        ImageIcon ii=new ImageIcon("E:\\eidulfitr\\d1.png");
        listofteachersframe.setIconImage(ii.getImage());
        JScrollPane scp=new JScrollPane(aTable);
        listofteachersframe.add(scp);
        listofteachersframe.setVisible(true);
       
    }
}
/////////////////////////////////////////END//////////////////////////////////////////////////////////

















                       
                     
                   
                   
              